// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
        DMux8Way (in=load, sel=address, a=loadRegister0,
                                        b=loadRegister1,
                                        c=loadRegister2,
                                        d=loadRegister3,
                                        e=loadRegister4,
                                        f=loadRegister5,
                                        g=loadRegister6,
                                        h=loadRegister7);
        Register (in=in, load=loadRegister0, out=Register0);
        Register (in=in, load=loadRegister1, out=Register1);
        Register (in=in, load=loadRegister2, out=Register2);
        Register (in=in, load=loadRegister3, out=Register3);
        Register (in=in, load=loadRegister4, out=Register4);
        Register (in=in, load=loadRegister5, out=Register5);
        Register (in=in, load=loadRegister6, out=Register6);
        Register (in=in, load=loadRegister7, out=Register7);
        Mux8Way16 (a=Register0,
                   b=Register1,
                   c=Register2,
                   d=Register3,
                   e=Register4,
                   f=Register5,
                   g=Register6,
                   h=Register7, sel=address, out=out);
        
}
