// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
        DMux8Way (in=load, sel=address[0..2], a=loadRAM0,
                                              b=loadRAM1,
                                              c=loadRAM2,
                                              d=loadRAM3,
                                              e=loadRAM4,
                                              f=loadRAM5,
                                              g=loadRAM6,
                                              h=loadRAM7);
        RAM8 (in=in, load=loadRAM0, address=address[3..5], out=RAM8out0);
        RAM8 (in=in, load=loadRAM1, address=address[3..5], out=RAM8out1);
        RAM8 (in=in, load=loadRAM2, address=address[3..5], out=RAM8out2);
        RAM8 (in=in, load=loadRAM3, address=address[3..5], out=RAM8out3);
        RAM8 (in=in, load=loadRAM4, address=address[3..5], out=RAM8out4);
        RAM8 (in=in, load=loadRAM5, address=address[3..5], out=RAM8out5);
        RAM8 (in=in, load=loadRAM6, address=address[3..5], out=RAM8out6);
        RAM8 (in=in, load=loadRAM7, address=address[3..5], out=RAM8out7);
        Mux8Way16 (a=RAM8out0, 
                   b=RAM8out1,
                   c=RAM8out2,
                   d=RAM8out3,
                   e=RAM8out4,
                   f=RAM8out5,
                   g=RAM8out6,
                   h=RAM8out7, sel=address[0..2], out=out);
}
